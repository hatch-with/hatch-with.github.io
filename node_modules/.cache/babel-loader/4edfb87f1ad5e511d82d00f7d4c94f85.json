{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Documents/GitHub/hatch-with.github.io/src/Charts2.js\";\nimport React from 'react';\nimport './App.css';\nimport { ftruncateSync } from 'fs';\nconst CHAPTERS = [5, 3];\nconst APIS = [{\n  \"weekone\": \"https://api.sheety.co/3664fce7-19ab-434d-865c-fbe5034cdfa1\"\n}, {\n  \"weektwo\": \"https://api.sheety.co/8a980111-20a6-4c83-bc7a-596335e640c2\"\n}];\nexport class Charts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // students: [\"belle\",\"fia\",\"joshua\",\"kiefe\",\"syafii\",\"syed\",\"wanNing\"],\n      sorted: [],\n      headers: [],\n      loaded: false,\n      active_student: null,\n      active_week: null\n    };\n  }\n\n  organiseData() {\n    //filter according to chapters and students and push the relevant data into the state, set loaded state to true\n    // this.state.active_student ? this.getData: \n    this.state.loaded = true;\n    let group = []; // for (let i = 1; i < CHAPTERS[active_week-1]; i++) {\n    //   let segments = this.state.weekone.filter(item => item.chapter == i.toString());\n    //   let header = this.state.weekone.filter(item => item.chapter == 'C'+i.toString())\n    //   headers.push(header);\n    //   sorted.push(segments)\n    // }\n\n    this.setState({\n      loaded: true\n    });\n  }\n\n  componentDidMount() {} //fetch the data from api according to which week is active\n  //push the full data into the state \n  //run organiseData function after everything is done, to sort data out\n  // active_student ? this.getData : '';\n  // let API = APIS[active_week-1];\n  // fetch(API)\n  //   .then((response) => {\n  //     return response.json()\n  //   }).then((json) => {\n  //     this.setState({data: json});\n  //     // active_week ? this.organiseData() : '';\n  //   });\n  //   fetch(\"https://api.sheety.co/3664fce7-19ab-434d-865c-fbe5034cdfa1\")\n  //     .then((response) => {\n  //       return response.json()\n  //     }).then((one) => {\n  //       this.setState({weekone: one});\n  //       let group = []\n  //       for (let i = 1; i < CHAPTERS[0]; i++) {\n  //         let segments = this.state.weekone.filter(item => item.chapter == i.toString());\n  //         let header = this.state.weekone.filter(item => item.chapter == 'C'+i.toString())\n  //         all_headers.push(header);\n  //         group.push(segments)\n  //         // if (segments.length> 0) {final.push(segments);}\n  //       }\n  //       final.push(group);\n  //       this.setState({oneloaded: true});\n  //     });\n  //   fetch(\"https://api.sheety.co/8a980111-20a6-4c83-bc7a-596335e640c2\")\n  //     .then((response) => {\n  //       return response.json()\n  //     }).then((two) => {\n  //       this.setState({weektwo: two});\n  //       let group = []\n  //       for (let i = 1; i < CHAPTERS[1]; i++) {\n  //         let segments = this.state.weektwo.filter(item => item.chapter == i.toString());\n  //         let header = this.state.weektwo.filter(item => item.chapter == 'C'+i.toString())\n  //         all_headers.push(header);\n  //         group.push(segments);\n  //       }\n  //       final.push(group);\n  //       this.setState({twoloaded: true});\n  //     });\n  //   this.setState({sorted: final});\n  //   this.setState({headers: all_headers})\n  // }\n  // renderData() {\n  //   console.log('rendering')\n  //   return this.state.sorted.map((week) => \n  //     <div key={week} className=\"week-container\">\n  //       {week.map((row) => \n  //         <div key={row.code} id={row.code} className=\"module-container\">\n  //           <p>{row.code}</p>\n  //           <p>{row.instructions}</p>\n  //         </div>\n  //       )}\n  //     </div>\n  //   )\n  // }\n\n\n  renderData() {\n    return this.state.sorted.map(chapter => React.createElement(\"div\", {\n      key: index,\n      className: \"chapter-container\",\n      id: chapter[0].chapter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, chapter.map((mods, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"module-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: mods.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"card-img\",\n      src: mods.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))))));\n  } // renderData() {\n  //   return this.state.sorted.map((week, index) => \n  //     <div key={index} className=\"week-container\" id={index+1}>\n  //       {week.map((chapter, index) => \n  //         <div key={index} className=\"chapter-container\" id={chapter[0].chapter}>\n  //           {chapter.map((mods, index) => \n  //             <div key={index} className=\"module-container\">\n  //             {/* {mods.code} */}\n  //               <a href={mods.code}>\n  //                 <img className=\"card-img\" src={mods.picture}></img>\n  //               </a> \n  //             </div>  \n  //           )}\n  //         </div>\n  //         )}\n  //     </div>\n  //   )\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.loaded ? this.renderData() : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, 'Loading'));\n  }\n\n}\nexport default Charts;","map":{"version":3,"sources":["/Users/angel/Documents/GitHub/hatch-with.github.io/src/Charts2.js"],"names":["React","ftruncateSync","CHAPTERS","APIS","Charts","Component","constructor","props","state","data","sorted","headers","loaded","active_student","active_week","organiseData","group","setState","componentDidMount","renderData","map","chapter","index","mods","code","picture","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,IAA9B;AACA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB;AACA,MAAMC,IAAI,GAAG,CACX;AAAC,aAAU;AAAX,CADW,EAEX;AAAC,aAAU;AAAX,CAFW,CAAb;AAKA,OAAO,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEX;AACAC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,MAAM,EAAE,KALG;AAMXC,MAAAA,cAAc,EAAE,IANL;AAOXC,MAAAA,WAAW,EAAE;AAPF,KAAb;AASD;;AAEDC,EAAAA,YAAY,GAAG;AACb;AACA;AAEA,SAAKP,KAAL,CAAWI,MAAX,GAAoB,IAApB;AACA,QAAII,KAAK,GAAG,EAAZ,CALa,CAOb;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKC,QAAL,CAAc;AAACL,MAAAA,MAAM,EAAE;AAAT,KAAd;AACD;;AAIDM,EAAAA,iBAAiB,GAAG,CAejB,CAfc,CACf;AACA;AACA;AACA;AAEE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKX,KAAL,CAAWE,MAAX,CAAkBU,GAAlB,CAAuBC,OAAD,IAC3B;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,SAAS,EAAC,mBAA3B;AAA+C,MAAA,EAAE,EAAED,OAAO,CAAC,CAAD,CAAP,CAAWA,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,CAACD,GAAR,CAAY,CAACG,IAAD,EAAOD,KAAP,KACX;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAG,MAAA,IAAI,EAAEC,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAED,IAAI,CAACE,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADD,CADH,CADK,CAAP;AAYD,GAxHyC,CA0H1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWI,MAAX,GAAoB,KAAKO,UAAL,EAApB,GAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,SAAL,CAD3C,CADF;AAKD;;AApJyC;AAuJ5C,eAAef,MAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { ftruncateSync } from 'fs';\nconst CHAPTERS = [5, 3]\nconst APIS = [\n  {\"weekone\":\"https://api.sheety.co/3664fce7-19ab-434d-865c-fbe5034cdfa1\"},\n  {\"weektwo\":\"https://api.sheety.co/8a980111-20a6-4c83-bc7a-596335e640c2\"}\n]\n\nexport class Charts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      // students: [\"belle\",\"fia\",\"joshua\",\"kiefe\",\"syafii\",\"syed\",\"wanNing\"],\n      sorted: [],\n      headers: [],\n      loaded: false,\n      active_student: null,\n      active_week: null\n    }\n  }\n\n  organiseData() {\n    //filter according to chapters and students and push the relevant data into the state, set loaded state to true\n    // this.state.active_student ? this.getData: \n\n    this.state.loaded = true;\n    let group = []\n        \n    // for (let i = 1; i < CHAPTERS[active_week-1]; i++) {\n    //   let segments = this.state.weekone.filter(item => item.chapter == i.toString());\n    //   let header = this.state.weekone.filter(item => item.chapter == 'C'+i.toString())\n    //   headers.push(header);\n    //   sorted.push(segments)\n    // }\n    this.setState({loaded: true});\n  }\n\n\n\n  componentDidMount() {\n    //fetch the data from api according to which week is active\n    //push the full data into the state \n    //run organiseData function after everything is done, to sort data out\n    // active_student ? this.getData : '';\n\n      // let API = APIS[active_week-1];\n\n      // fetch(API)\n      //   .then((response) => {\n      //     return response.json()\n      //   }).then((json) => {\n      //     this.setState({data: json});\n      //     // active_week ? this.organiseData() : '';\n      //   });\n    }\n    \n  //   fetch(\"https://api.sheety.co/3664fce7-19ab-434d-865c-fbe5034cdfa1\")\n  //     .then((response) => {\n  //       return response.json()\n  //     }).then((one) => {\n  //       this.setState({weekone: one});\n  //       let group = []\n        \n  //       for (let i = 1; i < CHAPTERS[0]; i++) {\n  //         let segments = this.state.weekone.filter(item => item.chapter == i.toString());\n  //         let header = this.state.weekone.filter(item => item.chapter == 'C'+i.toString())\n  //         all_headers.push(header);\n  //         group.push(segments)\n          \n  //         // if (segments.length> 0) {final.push(segments);}\n  //       }\n  //       final.push(group);\n  //       this.setState({oneloaded: true});\n\n  //     });\n\n  //   fetch(\"https://api.sheety.co/8a980111-20a6-4c83-bc7a-596335e640c2\")\n  //     .then((response) => {\n  //       return response.json()\n  //     }).then((two) => {\n  //       this.setState({weektwo: two});\n  //       let group = []\n\n  //       for (let i = 1; i < CHAPTERS[1]; i++) {\n  //         let segments = this.state.weektwo.filter(item => item.chapter == i.toString());\n  //         let header = this.state.weektwo.filter(item => item.chapter == 'C'+i.toString())\n  //         all_headers.push(header);\n  //         group.push(segments);\n  //       }\n\n  //       final.push(group);\n  //       this.setState({twoloaded: true});\n\n  //     });\n\n  //   this.setState({sorted: final});\n  //   this.setState({headers: all_headers})\n  // }\n\n\n  // renderData() {\n  //   console.log('rendering')\n  //   return this.state.sorted.map((week) => \n  //     <div key={week} className=\"week-container\">\n  //       {week.map((row) => \n  //         <div key={row.code} id={row.code} className=\"module-container\">\n  //           <p>{row.code}</p>\n  //           <p>{row.instructions}</p>\n  //         </div>\n  //       )}\n  //     </div>\n  //   )\n  // }\n\n  renderData() {\n    return this.state.sorted.map((chapter) =>\n      <div key={index} className=\"chapter-container\" id={chapter[0].chapter}>\n        {chapter.map((mods, index) => \n          <div key={index} className=\"module-container\">\n          {/* {mods.code} */}\n            <a href={mods.code}>\n              <img className=\"card-img\" src={mods.picture}></img>\n            </a> \n          </div>  \n        )}\n      </div>\n    )\n  }\n\n  // renderData() {\n  //   return this.state.sorted.map((week, index) => \n  //     <div key={index} className=\"week-container\" id={index+1}>\n  //       {week.map((chapter, index) => \n  //         <div key={index} className=\"chapter-container\" id={chapter[0].chapter}>\n  //           {chapter.map((mods, index) => \n  //             <div key={index} className=\"module-container\">\n  //             {/* {mods.code} */}\n  //               <a href={mods.code}>\n  //                 <img className=\"card-img\" src={mods.picture}></img>\n  //               </a> \n  //             </div>  \n  //           )}\n  //         </div>\n  //         )}\n  //     </div>\n  //   )\n  // }\n\n\n  render() {\n    return(\n      <div>\n        {this.state.loaded ? this.renderData() : <h2>{'Loading'}</h2>}\n      </div>\n    )\n  }\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}