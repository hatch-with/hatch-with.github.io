{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Documents/GitHub/hatch-with.github.io/src/Charts.js\";\nimport React from 'react';\nimport './App.css';\nimport ContentPage from './ContentPage';\nimport ReactGA from 'react-ga';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nvar mod;\nconst CHAPTERS = [4, 3];\nconst APIS = [\"https://api.sheety.co/3664fce7-19ab-434d-865c-fbe5034cdfa1\", \"https://api.sheety.co/8a980111-20a6-4c83-bc7a-596335e640c2\"];\n\nclass RenderInfo extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    console.log(this.props.code);\n    {\n      this.props.context.setState({\n        info: this.props.data\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, console.log('entered render info'), React.createElement(ContentPage, {\n      data: this.props.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport class Charts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      sorted: [],\n      headers: [],\n      loaded: false,\n      info: false,\n      mod: ''\n    };\n  }\n\n  organiseData() {\n    if (this.state.data) {\n      for (let i = 1; i < CHAPTERS[this.props.active_week - 1]; i++) {\n        let segments = this.state.data.filter(item => item.chapter == i.toString());\n        let header = this.state.data.filter(item => item.chapter == 'C' + i.toString());\n        this.state.headers.push(header);\n        this.state.sorted.push(segments);\n      }\n\n      this.setState({\n        loaded: true\n      });\n    }\n  }\n\n  componentDidMount() {\n    let API = APIS[this.props.active_week - 1];\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    fetch(API).then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        data: json\n      });\n      this.organiseData();\n    });\n  }\n\n  getInfo(e, code) {\n    // e.stopPropagation();\n    // this.setState({mod: code})\n    mod = code;\n    this.setState({\n      mod: 2\n    });\n    console.log(this.state.mod);\n  }\n\n  renderData() {\n    return this.state.sorted.map((chapter, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"chapter-container\",\n      id: chapter[0].chapter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chapter-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.headers[index][0].title), chapter.map((mods, index) => React.createElement(\"div\", {\n      key: index,\n      className: \"module-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\".concat(mods.code),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"card-img\",\n      src: mods.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/\".concat(mods.code),\n      component: () => React.createElement(RenderInfo, {\n        info: chapter[index],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.renderData()));\n  }\n\n}\nexport default Charts;","map":{"version":3,"sources":["/Users/angel/Documents/GitHub/hatch-with.github.io/src/Charts.js"],"names":["React","ContentPage","ReactGA","BrowserRouter","Router","Route","Link","mod","CHAPTERS","APIS","RenderInfo","Component","constructor","props","componentDidMount","console","log","code","context","setState","info","data","render","Charts","state","sorted","headers","loaded","organiseData","i","active_week","segments","filter","item","chapter","toString","header","push","API","pageview","window","location","pathname","search","fetch","then","response","json","getInfo","e","renderData","map","index","title","mods","picture"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AAEA,IAAIC,GAAJ;AAEA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB;AACA,MAAMC,IAAI,GAAG,CAAC,4DAAD,EACb,4DADa,CAAb;;AAGA,MAAMC,UAAN,SAAyBV,KAAK,CAACW,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,IAAvB;AACA;AAAC,WAAKJ,KAAL,CAAWK,OAAX,CAAmBC,QAAnB,CAA4B;AAACC,QAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ;AAAlB,OAA5B;AAAqD;AACvD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,OAAO,CAACC,GAAR,CAAY,qBAAZ,CADH,EAEE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWO,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhBsC;;AAmBzC,OAAO,MAAMG,MAAN,SAAqBvB,KAAK,CAACW,SAA3B,CAAqC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKW,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE,EADK;AAEXI,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,MAAM,EAAE,KAJG;AAKXP,MAAAA,IAAI,EAAE,KALK;AAMXb,MAAAA,GAAG,EAAE;AANM,KAAb;AAQD;;AAEDqB,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKJ,KAAL,CAAWH,IAAf,EAAqB;AACnB,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,QAAQ,CAAC,KAAKK,KAAL,CAAWiB,WAAX,GAAuB,CAAxB,CAA5B,EAAwDD,CAAC,EAAzD,EAA6D;AAC3D,YAAIE,QAAQ,GAAG,KAAKP,KAAL,CAAWH,IAAX,CAAgBW,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,OAAL,IAAgBL,CAAC,CAACM,QAAF,EAA/C,CAAf;AACA,YAAIC,MAAM,GAAG,KAAKZ,KAAL,CAAWH,IAAX,CAAgBW,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,OAAL,IAAgB,MAAIL,CAAC,CAACM,QAAF,EAAnD,CAAb;AACA,aAAKX,KAAL,CAAWE,OAAX,CAAmBW,IAAnB,CAAwBD,MAAxB;AACA,aAAKZ,KAAL,CAAWC,MAAX,CAAkBY,IAAlB,CAAuBN,QAAvB;AACD;;AACD,WAAKZ,QAAL,CAAc;AAACQ,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD;AACF;;AAEDb,EAAAA,iBAAiB,GAAG;AAClB,QAAIwB,GAAG,GAAG7B,IAAI,CAAC,KAAKI,KAAL,CAAWiB,WAAX,GAAuB,CAAxB,CAAd;AACA5B,IAAAA,OAAO,CAACqC,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAA5D;AAEAC,IAAAA,KAAK,CAACN,GAAD,CAAL,CACGO,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAGKF,IAHL,CAGWE,IAAD,IAAU;AAChB,WAAK5B,QAAL,CAAc;AAACE,QAAAA,IAAI,EAAE0B;AAAP,OAAd;AACA,WAAKnB,YAAL;AACD,KANH;AAOD;;AAEDoB,EAAAA,OAAO,CAACC,CAAD,EAAIhC,IAAJ,EAAU;AACf;AACA;AACAV,IAAAA,GAAG,GAAGU,IAAN;AACA,SAAKE,QAAL,CAAc;AAACZ,MAAAA,GAAG,EAAE;AAAN,KAAd;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKQ,KAAL,CAAWjB,GAAvB;AAED;;AAGD2C,EAAAA,UAAU,GAAG;AACX,WAAO,KAAK1B,KAAL,CAAWC,MAAX,CAAkB0B,GAAlB,CAAsB,CAACjB,OAAD,EAAUkB,KAAV,KACzB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,mBAA3B;AAA+C,MAAA,EAAE,EAAElB,OAAO,CAAC,CAAD,CAAP,CAAWA,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKV,KAAL,CAAWE,OAAX,CAAmB0B,KAAnB,EAA0B,CAA1B,EAA6BC,KAA9D,CADF,EAEGnB,OAAO,CAACiB,GAAR,CAAY,CAACG,IAAD,EAAOF,KAAP,KACX;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,EAAE,aAAOE,IAAI,CAACrC,IAAZ,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEqC,IAAI,CAACC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,aAAMD,IAAI,CAACrC,IAAX,CAAX;AAA8B,MAAA,SAAS,EAAE,MAAM,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEiB,OAAO,CAACkB,KAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADD,CAFH,CADG,CAAP;AAYD;;AAED9B,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAK4B,UAAL,EAFH,CADF,CADF;AAYD;;AA5EyC;AAiF5C,eAAe3B,MAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ContentPage from './ContentPage';\nimport ReactGA from 'react-ga';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nvar mod;\n\nconst CHAPTERS = [4, 3]\nconst APIS = [\"https://api.sheety.co/3664fce7-19ab-434d-865c-fbe5034cdfa1\",\n\"https://api.sheety.co/8a980111-20a6-4c83-bc7a-596335e640c2\"]\n\nclass RenderInfo extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  componentDidMount() {\n    console.log(this.props.code);\n    {this.props.context.setState({info: this.props.data})}\n  }\n\n  render() {\n    return (\n      <div>\n        {console.log('entered render info')}\n        <ContentPage data={this.props.info} />\n      </div>\n    )\n  }\n}\n\nexport class Charts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      sorted: [],\n      headers: [],\n      loaded: false,\n      info: false,\n      mod: '',\n    }\n  }\n\n  organiseData() {\n    if (this.state.data) {\n      for (let i = 1; i < CHAPTERS[this.props.active_week-1]; i++) {\n        let segments = this.state.data.filter(item => item.chapter == i.toString());\n        let header = this.state.data.filter(item => item.chapter == 'C'+i.toString())\n        this.state.headers.push(header);\n        this.state.sorted.push(segments)\n      }\n      this.setState({loaded: true});\n    }\n  }\n\n  componentDidMount() {\n    let API = APIS[this.props.active_week-1];\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    fetch(API)\n      .then((response) => {\n        return response.json()\n      }).then((json) => {\n        this.setState({data: json});\n        this.organiseData()\n      })\n  }\n\n  getInfo(e, code) {\n    // e.stopPropagation();\n    // this.setState({mod: code})\n    mod = code\n    this.setState({mod: 2})    \n    console.log(this.state.mod);\n\n  }\n  \n\n  renderData() {\n    return this.state.sorted.map((chapter, index) =>\n        <div key={index} className=\"chapter-container\" id={chapter[0].chapter}>\n          <div className=\"chapter-header\">{this.state.headers[index][0].title}</div>\n          {chapter.map((mods, index) => \n            <div key={index} className=\"module-container\">\n            <Link to ={`/${mods.code}`}><img className=\"card-img\" src={mods.picture}></img></Link> \n            <Route path={`/${mods.code}`} component={() => <RenderInfo info={chapter[index]}/> } />           \n          </div>\n          )}\n        </div>\n      )\n  \n  }\n\n  render() {\n    return(\n      <div>\n        <Router>\n          {/* {this.state.loaded ? this.renderData() : ''} */}\n          {this.renderData()}\n          {/* <Route path={`/${this.state.mod}`} component={ContentPage} /> */}\n          \n          \n          {/* <Route path={`/${this.state.mod}`} render={this.renderInfo}/> */}\n        </Router>\n      </div>\n    )\n  }\n}\n\n\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}